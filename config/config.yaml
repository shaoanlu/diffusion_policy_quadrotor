name: "planar_quadrotor"

pred_horizon: 96
obs_horizon: 2
action_horizon: 10

controller:
    networks:
        obs_dim: 6
        action_dim: 6
        obstacle_encode_dim: 49
    noise_scheduler:
        type: "ddpm"
        ddpm:
            num_train_timesteps: 100  # number of diffusion iterations
            beta_schedule: "squaredcos_cap_v2"
            clip_sample: true  # required when predict_epsilon=False
            prediction_type: "epsilon"
        ddim:  # faster inference
            num_train_timesteps: 100
            beta_schedule: "squaredcos_cap_v2"
            clip_sample: true
            prediction_type: "epsilon"
        dpmsolver:  # faster inference, experimental
            num_train_timesteps: 100
            beta_schedule: "squaredcos_cap_v2"
            prediction_type: "epsilon"
            use_karras_sigmas: true
dataloader:
    batch_size: 256

normalizer:
    action:
        min: [-2.65159208, -10.16947746, -2.89220018, -10.43009186, -1.96370732, -20.39511108]
        max: [8.05438119, 6.97639418, 8.47793278, 11.32719083, 2.52766881, 18.05487823]
    observation:
        min: [-2.6498363 , -9.56432438, -2.8893013 , -10.42939377, -1.94762313, -17.22535133]
        max: [8.05234146, 6.97629929, 8.4747467 , 10.96181583, 2.51514196, 18.05488014]

simulator:
    m_q: 1.0 # kg
    I_xx: 0.1 # kg.m^2
    l_q: 0.3 # m, length of the quadrotor
    g: 9.81
    dt: 0.01
